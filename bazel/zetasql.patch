--- zetasql/analyzer/BUILD
+++ zetasql/analyzer/BUILD
@@ -14,7 +14,7 @@
 # limitations under the License.
 #

 package(
-    default_visibility = ["//zetasql/base:zetasql_implementation"],
+    default_visibility = ["//visibility:public"],
 )
 
 cc_library(

--- zetasql/base/BUILD
+++ zetasql/base/BUILD
@@ -17,7 +17,7 @@
 licenses(["notice"])  # Apache v2.0
 
 package(
-    default_visibility = [":zetasql_implementation"],
+    default_visibility = ["//visibility:public"],
 )
 
 package_group(

--- zetasql/common/BUILD
+++ zetasql/common/BUILD
@@ -14,4 +14,4 @@
 # limitations under the License.
 
 package(
-    default_visibility = ["//zetasql/base:zetasql_implementation"],
+    default_visibility = ["//visibility:public"],

--- zetasql/parser/BUILD
+++ zetasql/parser/BUILD
@@ -17,7 +17,7 @@ load("//bazel:bison.bzl", "genyacc")
 load("//bazel:flex.bzl", "genlex")
 
 package(
-    default_visibility = ["//zetasql/base:zetasql_implementation"],
+    default_visibility = ["//visibility:public"],
 )
 
 genrule(

--- zetasql/public/simple_catalog.h
+++ zetasql/public/simple_catalog.h
@@ -55,6 +55,11 @@ class SimpleTableProto;
 //
 // This class is thread-safe.
 class SimpleCatalog : public EnumerableCatalog {
+  friend void dropOwnedTable(SimpleCatalog* catalog, const std::string& name);
+  friend void dropOwnedTableIfExists(SimpleCatalog* catalog, const std::string& name);
+  friend void dropOwnedFunction(SimpleCatalog* catalog, const std::string& full_name_without_group);
+
+
  public:
   // Construct a Catalog with catalog name <name>.
   //

--- zetasql/resolved_ast/BUILD
+++ zetasql/resolved_ast/BUILD
@@ -16,7 +16,7 @@
 
 load("//zetasql/resolved_ast:build_rules.bzl", "gen_resolved_ast_files")
 
-package(default_visibility = ["//zetasql/base:zetasql_implementation"])
+package(default_visibility = ["//visibility:public"])
 
 py_binary(
     name = "gen_resolved_ast",
