# This is a basic workflow to help you get started with Actions

name: release
on:
  create:
    tags:
    - v*.*.*
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Checkout the repository
        uses: actions/checkout@master

      - name: Extract tag name
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF##*/}

      - name: Zip binaries
        shell: bash
        env:
          TAG: ${{ steps.tag.outputs.tag }}
        run: |
          tar -zcvf bin/alphasql_${TAG}_linux_x86_64.tar.gz $(find ./bin/linux -type f)
          tar -zcvf bin/alphasql_${TAG}_darwin_amd64.tar.gz $(find ./bin/osx -type f)

      - name: Upload Linux Asset
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/alphasql_${{ steps.tag.outputs.tag }}_linux_x86_64.tar.gz
          asset_name: alphasql_${{ steps.tag.outputs.tag }}_linux_x86_64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload OSX Asset
        id: upload-osx-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/alphasql_${{ steps.tag.outputs.tag }}_darwin_amd64.tar.gz
          asset_name: alphasql_${{ steps.tag.outputs.tag }}_darwin_amd64.tar.gz
          asset_content_type: application/tar+gzip
