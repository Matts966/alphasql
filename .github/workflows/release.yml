name: release
on:
  create:
    tags:
    - v*.*.*
jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Zip binaries
        shell: bash
        run: |
          mv ./bin/linux alphasql_linux_x86_64
          tar -zcvf bin/alphasql_linux_x86_64.tar.gz alphasql_linux_x86_64
          mv ./bin/osx alphasql_darwin_amd64
          tar -zcvf bin/alphasql_darwin_amd64.tar.gz alphasql_darwin_amd64

      - name: Upload Linux Asset
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/alphasql_linux_x86_64.tar.gz
          asset_name: alphasql_linux_x86_64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Upload OSX Asset
        id: upload-osx-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./bin/alphasql_darwin_amd64.tar.gz
          asset_name: alphasql_darwin_amd64.tar.gz
          asset_content_type: application/tar+gzip

      - name: Docker Build and Push
        uses: docker/build-push-action@v1
        env:
          DOCKER_BUILDKIT: 1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: matts966/alphasql
          tag_with_ref: true
          dockerfile: docker/Dockerfile

      - name: Push to Github Registry
        run: |
          docker tag matts966/alphasql docker.pkg.github.com/alphasql/alphasql:${GITHUB_REF#refs/tags/}
          echo GITHUB_TOKEN | docker login https://docker.pkg.github.com -u DOCKER_USERNAME --password-stdin
          docker push docker.pkg.github.com/alphasql/alphasql:${GITHUB_REF#refs/tags/}
        env:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}      
            GITHUB_REF: ${{ github.ref }}

