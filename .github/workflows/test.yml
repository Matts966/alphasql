name: test
on: push
jobs:
  linux:
    name: Test the repository on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: ${{ runner.os }}-bazel-build-${{ hashFiles('./**') }}
          restore-keys: ${{ runner.os }}-bazel-build-
      - name: Test the repository
        run: |
            sudo apt-get update && \
                sudo apt-get install tzdata build-essential software-properties-common -y && \
                sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
                sudo apt-get update && \
                sudo apt-get install --no-install-recommends -y make gcc-9 g++-9 && \
                sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 900 \
                    --slave /usr/bin/g++ g++ /usr/bin/g++-9
            sudo apt install curl gnupg
            curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
            sudo apt update && sudo apt install bazel-1.0.0
            bazel test --test_output=errors //alphasql/...

  osx:
    name: Test the repository on Mac
    runs-on: macOS-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: /private/var/tmp
          key: ${{ runner.os }}-bazel-build-${{ hashFiles('./**') }}
          restore-keys: ${{ runner.os }}-bazel-build-
      - name: Test the repository
        shell: bash
        run: |
          (cd "/usr/local/Cellar/bazel/*/libexec/bin" && 
            curl -LO https://releases.bazel.build/1.0.0/release/bazel-1.0.0-darwin-x86_64 && 
            chmod +x bazel-1.0.0-darwin-x86_64)
          brew tap bazelbuild/tap && brew extract bazel bazelbuild/tap --version 1.0.0
          bazel test --test_output=errors //alphasql/...
